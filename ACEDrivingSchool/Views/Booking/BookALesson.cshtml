<head>
    <link rel="stylesheet" href="~/Content/fullcalendar.css" />
    <link rel="stylesheet" href="~/Content/fullcalendar.print.css" media="print"/>

    <link rel="stylesheet" href="~/Content/toastr.css"/>
    <script type="text/javascript" src="/Scripts/toastr.js"></script>

    <script type="text/javascript" src="/scripts/jquery-3.1.1.min.js"></script>
    <script type="text/javascript" src="/scripts/moment.min.js"></script>
    <script type="text/javascript" src="/scripts/bootstrap.min.js"></script>
    <script type="text/javascript" src="/scripts/bootstrap-datetimepicker.min.js"></script>
    <script type="text/javascript" src="/scripts/datejs.js"></script>

    

    <script src="~/Scripts/moment.min.js"></script>
    <script src="~/Scripts/fullcalendar/fullcalendar.min.js"></script>
</head>

@using System.Data.Entity.Core.Common.EntitySql
@using ACEDrivingSchool.Models
@model ACEDrivingSchool.ViewModels.BookALessonViewModel
@{
    ViewBag.Title = "Book a lesson";
}

<h2>@ViewBag.Title</h2>
<h3>Your instructors Timetable</h3>



<div id="calendar"></div>

<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"><span id="eventTitle"></span></h4>
            </div>

            <div class="modal-body">
                <p id="pDetails"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
            </div>

        </div>
    </div>
</div>


    <div id="myModalSave" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Book a lesson</h4>
                </div>

                <div class="modal-body">

                    <form class="form-horizontal">
                        <input type="hidden" id="hdLessonId" value="0"/>
                        <input type="hidden" id="hdLessonPaid" value="false"/>


                        <div class="form-group">
                            <label>Date/Time of Lesson</label>
                            <div class="input-group date" id="datePicker">
                                @Html.TextBoxFor(m => m.Lesson.DateTimeOfLesson, new {@class = "form-control", id="txtDate"})
                                <script type="text/javascript">
                                    

                                    $(function () {
                                        $('#txtDate').datetimepicker({
                                            format: "DD/MM/YYYY HH:mm A",
                                            stepping: 30,
                                            minDate: new Date()

                                    });
                                    });
                                </script>
                            </div>
                            
                        </div>

                        <div class="form-group">
                            <label>Duration</label>
                            @Html.DropDownListFor(m => m.Lesson.DurationId, new SelectList(Model.Durations, "Id", "DurationOfLesson"), "Select Duration", new {@class = "form-control", id = "ddDuration"})

                        </div>

                        

                    </form>

                </div>
                <div class="modal-footer">

                    <button type="button" id="btnSave" class="btn btn-success" >Save</button>
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>

                </div>

            </div>
        </div>
    </div>



@section scripts
{


    <script>
        $(document).ready(function() {


            var lessons = [];
            var selectedEvent = null;

            fetchLessonsAndRenderCalendar();

            //this method will fetch the lessons based on a particular instructorId and then call a method to render the calendar, displaying those lessons
            function fetchLessonsAndRenderCalendar() {
                console.log(lessons);
                $.ajax({
                        type: "GET",
                        url: '/booking/GetLessonsByInstructorId'
                    }).done(function(data) {
                        $.each(data,
                            function(i, v) {
                                //pushes each of the lessons retrieved onto a local array of lessons
                                var durationString = "";
                                if (v.DurationId == 1) {
                                    durationString = "1 Hour";
                                } else {
                                    durationString = "2 Hours";
                                }

                                lessons.push({
                                    lessonId: v.Id,
                                    title: 'Lesson',
                                    description: moment(v.DateTimeOfLesson),
                                    start: moment(v.DateTimeOfLesson),
                                    duration: durationString,
                                    paid: v.Paid
                                });
                            });

                        generateCalendar(lessons);
                    })
                    .fail(function(error) {
                        toastr.fail("Failed to load lessons");
                    });

            }

            //This method will generate the calendar based on the local array of lessons
            function generateCalendar(lessons) {
                //destroys the calendar before it creates a new one, incase one was there before
                $('#calendar').fullCalendar('destroy');

                //renders that calendar on the page
                $('#calendar').fullCalendar({
                    contentHeight: 400,
                    defaultDate: new Date(),
                    timeFormat: 'h(:mm)a',
                    //adds buttons to the head for navigation
                    header: {
                        left: 'prev, next today',
                        center: 'title',
                        right: 'month,basicWeek,basicDay,agenda'
                    },
                    eventLimit: true,
                    eventColor: '#378006',
                    events: lessons,
                    //this section is used to add details to the modal when a lesson is clicked. This allows the user to view more in depth details
                    eventClick: function(calEvent, jsEvent, view) {
                        selectedEvent = calEvent;
                        $('#myModal #eventTitle').text(calEvent.title);
                        var $description = $('<div/>');
                        $description.append($('<p/>')
                            .html('<b>Date/Time: <b/>' + calEvent.start.format("DD MMM hh:mm a")));
                        $description.append($('<p/>').html('<b>Duration: <b/>' + calEvent.duration));
                        $description.append($('<p/>').html('<b>Paid: <b/>' + calEvent.paid));
                        $('#myModal #pDetails').empty().html($description);

                        //loads the modal for displaying the details
                        $('#myModal').modal();
                    },
                    selectable: true,
                    //allows the user to click on a date to add a lesson
                    select: function(start, end) {
                        selectedEvent = {
                            lessonId: 0,
                            title: '',
                            description: '',
                            start: start,
                            duration: '',
                            paid: false
                        }
                        //calls method to add the booking
                        addBooking();
                        $('#calendar').fullCalendar('unselect');
                    }
                });
            }

            //used to delete lessons from the database
            $('#btnDelete').click(function() {
                if (selectedEvent != null && confirm('Are you sure you wish to delete this lesson?')) {
                    $.ajax({
                        type: "POST",
                        url: "/booking/DeleteLesson",
                        //passes the lessonID in as a variable
                        data: { 'lessonId': selectedEvent.lessonId }
                    }).done(function(data) {
                        if (data.status) {
                            //rerenders the calendar and hides the modal
                            fetchLessonsAndRenderCalendar();
                            $('#myModal').modal('hide');
                            toastr.success("Lesson removed");
                        }
                    }).fail(function() {
                        toastr.fail("Lesson was not removed. An unknown error occured.");
                    });
                }
            });

            //Displays the modal for adding a booking
            function addBooking() {

                $('#txtDate').val(selectedEvent.start.format("DD/MM/YYYY HH:mm A"));
                var durationValue = 0;

                if (selectedEvent.duration == "1 Hour") {
                    durationValue = 1;
                } else {
                    durationValue = 2;
                }
                $('#ddDuration').val(durationValue);
                $('#myModalSave').modal();
            }

            //method for saving a lesson to the database when the user has input valid selections
            $('#btnSave').click(function() {
                var timeAvailable = true;


                //checks that the customer has selected a duration
                if ($('#txtDate').val().trim() == "") {
                    toastr.error("A date is required");
                    return;
                }

                //checks that the customer has selected a duration
                if ($('#ddDuration').val().trim() == "") {
                    toastr.error("A duration is required");
                    return;
                }


                lessons.forEach(function(element) {


                    //the date of the new booking
                    var currentDate = $('#txtDate').val();
                    var convertedCurrentDate = Date.parse(currentDate);


                    //duration of new booking
                    var durationFromForm = $('#ddDuration').val();


                    //duration to be added to the current bookings start date
                    var hoursToAdd = 0;
                    if (durationFromForm == "1 Hour") {
                        hoursToAdd = 1;
                    } else {
                        hoursToAdd = 2;
                    }


                    //end date of the current lesson

                    var currentEndDate = moment(convertedCurrentDate);
                    currentEndDate = currentEndDate.add(hoursToAdd, "hours");
                    currentEndDate = currentEndDate.format("DD/MM/YYYY HH:mm A");


                    //start date of the current lesson in lessons
                    var startDate = moment(element.start).format("DD/MM/YYYY HH:mm A");


                    //number of hours to add to start date in the current lesson in lessons
                    var addedHours = element.duration = "1 Hour" ? 1 : 2;

                    //end date of the current lesson in lessons
                    var endDate = moment(element.start);

                    //adds hours to the create the end date of the current lesson
                    endDate.add(addedHours, "hours");

                    //formats the end date
                    endDate = endDate.format("DD/MM/YYYY HH:mm A");


                    //checks that the start date does not fall within a previous lesson
                    if (currentDate >= startDate && currentDate < endDate) {

                        timeAvailable = false;


                    }
                    //checks that a booking will not run over into the next lesson
                    else if (currentDate < startDate && currentEndDate > startDate) {

                        timeAvailable = false;

                    }


                });

                console.log(timeAvailable);

                //if the time is available, it will build a lesson based on the details entered by the user
                if (timeAvailable == true) {
                    var data = {
                        Id: $('#hdLessonId').val(),
                        DateTimeOfLesson: $('#txtDate').val(),
                        DurationId: $('#ddDuration').val(),
                        BookingDate: null,
                        CustomerId: null,
                        InstructorId: null,
                        Paid: false
                    }
                    //calls the method to save the lesson
                    saveLesson(data);
                } else {
                    toastr.error("This time is not available, please select another");
                }


            });

            //method for saving the lesson to the database using an ajax call
            function saveLesson(data) {
                $.ajax({
                    type: "POST",
                    url: "/booking/SaveLesson",
                    //passes in the created lesson as a variable
                    data: data
                }).done(function(data) {
                    if (data.status) {
                        //rerenders the calendar and hides the modal
                        fetchLessonsAndRenderCalendar();
                        $('#myModalSave').modal('hide');
                    }
                    toastr.success("Lesson added");
                    $('#txtDate').val('');
                    $('#ddDuration').val('');

                    //Section used for sending an sms message to the user. This code does not work but I left it in to show attempt
                    /*var messageData = {
                        Id: $('#hdLessonId').val(),
                        DateTimeOfLesson: $('#txtDate').val(),
                        DurationId: $('#ddDuration').val(),
                        BookingDate: null,
                        CustomerId: null,
                        InstructorId: null,
                        Paid: false
                    }
                    sendSms(messageData);

                    */

                }).fail(function() {
                    toastr.fail("Lesson was not added. An unknown error occured.");
                });

            }

            //method for calling the action to send a sms message. Does not work so commented out.
            /*function sendSms(messageData) {
                $.ajax({
                    type: "POST",
                    url: "/sms/SendMessage",
                    data: messageData
                });
            }*/


        });
    </script>

}


